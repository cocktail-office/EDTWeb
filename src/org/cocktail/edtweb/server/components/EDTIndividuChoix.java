package org.cocktail.edtweb.server.components;
// Generated by the WOLips Core at Thu Sep 23 09:54:56 CEST 2004

import org.cocktail.edtweb.server.Session;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WOResponse;
import com.webobjects.eocontrol.EOAndQualifier;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOGenericRecord;
import com.webobjects.eocontrol.EOQualifier;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSMutableArray;

import fr.univlr.cri.webapp.CRIWebComponent;
import fr.univlr.cri.webapp.LRLog;
import fr.univlr.cri.webapp.LRUserInfo;
import fr.univlr.cri.webapp.LRUserInfoDB;

public class EDTIndividuChoix extends CRIWebComponent {
	private static final long serialVersionUID = -8545479440808262470L;
	public static String REFRESH = "refreshIndividuChoix";
	public boolean showChoixEDT;
	public boolean showRecherche;
	public boolean showChoisIndividu;
	public String nom;
	public String prenom;

	/** @TypeInfo LRUserInfo */
	public NSMutableArray listeIndividu;
	public LRUserInfo itemIndividu;

	/** @TypeInfo LRUserInfo */
	public NSMutableArray itemSelected;

	public EDTIndividuChoix(final WOContext context) {
		super(context);
	}

	private EOEditingContext localEContext() {
		return session().defaultEditingContext();
	}

	public void appendToResponse(final WOResponse arg0, final WOContext arg1) {
		if (session().objectForKey(REFRESH) != null && ((Boolean) session().objectForKey(REFRESH)).booleanValue()) {
			session().setObjectForKey(Boolean.FALSE, REFRESH);
			showChoixEDT = true;
			showChoisIndividu = showRecherche = false;
		}
		super.appendToResponse(arg0, arg1);
	}

	public WOComponent voirMonEDT() {
		((Session) session()).setAffichageEnCours(Main.AFFICHE_INDIVIDU);
		session().setObjectForKey(new Boolean(true), "refresh");
		return null;
	}

	public WOComponent voirRecherche() {
		showRecherche = true;
		showChoisIndividu = showChoixEDT = false;
		return null;
	}

	public WOComponent voirChoix() {
		showChoisIndividu = true;
		showRecherche = showChoixEDT = false;
		initListeIndividu();
		return null;
	}

	public WOComponent voirEDTIndividu() {
		if (itemSelected == null || itemSelected.count() <= 0) {
			return null;
		}
		session().setObjectForKey(itemSelected.objectAtIndex(0), EDTIndividuChoisi.INDIVIDU_CHOISI);
		((Session) session()).setAffichageEnCours(Main.AFFICHE_INDIVIDU_CHOISI);
		session().setObjectForKey(new Boolean(true), "refresh");
		return null;
	}

	public void initListeIndividu() {
		// LRLog.trace("nom = "+nom);
		// LRLog.trace("prenom = "+prenom);
		listeIndividu = new NSMutableArray();
		final NSMutableArray args = new NSMutableArray();
		if (nom != null) {
			args.addObject(EOQualifier.qualifierWithQualifierFormat("nomUsuel caseInsensitiveLike %@", new NSArray("*" + nom + "*")));
		}
		if (prenom != null) {
			args.addObject(EOQualifier.qualifierWithQualifierFormat("prenom  caseInsensitiveLike %@", new NSArray("*" + prenom + "*")));
		}
		final NSMutableArray sort = new NSMutableArray();
		sort.addObject(EOSortOrdering.sortOrderingWithKey("nomUsuel", EOSortOrdering.CompareAscending));
		sort.addObject(EOSortOrdering.sortOrderingWithKey("prenom", EOSortOrdering.CompareAscending));

		final NSArray tmp = criApp.dataBus().fetchArray(localEContext(), "IndividuUlr", new EOAndQualifier(args), sort);
		LRLog.trace("tmp = " + tmp.count());
		for (int i = 0; i < tmp.count(); i++) {
			final Number array_element = (Number) ((EOGenericRecord) tmp.objectAtIndex(i)).valueForKey("persId");
			if (array_element != null) {
				final LRUserInfoDB user = new LRUserInfoDB(criApp.dataBus());
				user.compteForPersId(array_element, true);
				if (user.errorCode() == LRUserInfo.ERROR_NONE) {
					listeIndividu.addObject(user);
				}
			}
		}
	}

}
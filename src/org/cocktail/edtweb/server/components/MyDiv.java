package org.cocktail.edtweb.server.components;
// Generated by the WOLips TemplateEngine Plug-in at 15 f√©vr. 2005 15:55:29

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WOResponse;

public class MyDiv extends WOComponent {
	/**
	 * 
	 */
	private static final long serialVersionUID = -4530139149611245878L;
	public static String VISIBILITY_VISIBLE = "visible";
	public static String VISIBILITY_HIDDEN = "hidden";
	public static String VISIBILITY_INHERIT = "inherit";
	public static String VISIBILITY_DEFAULT = "default";
	private String id;
	private String contenuBalise;
	private String left;
	private String top;
	private String width;
	private String height;
	private int zIndex;
	private int zIndexOver;
	private String bgColor;
	private String layerBgColor;
	private String border;
	private String visibility;
	private String onMouseOver;
	private String onMouseOut;
	public String lOnMouseOver;
	public String lOnMouseOut;
	private String classInit;
	private String classOver;
	public String style;
	private boolean positionAbsolute;

	public MyDiv(final WOContext context) {
		super(context);
	}

	// <div id="Layer1" style="position:absolute; left:176px; top:114px; width:307px; height:127px; z-index:1; background-color: #FFC1C1;
	// layer-background-color: #FFC1C1; border: 1px none #000000; visibility: visible;" class="t50">BlaBla</div>

	public void awake() {
		super.awake();
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.webobjects.appserver.WOComponent#appendToResponse(com.webobjects.appserver.WOResponse, com.webobjects.appserver.WOContext)
	 */
	public void appendToResponse(final WOResponse arg0, final WOContext arg1) {
		lOnMouseOver = "document.getElementById('" + getId() + "').className='" + getClassOver() + "';document.getElementById('" + getId()
				+ "').style.zIndex=" + getZIndexOver() + ";" + getOnMouseOver();
		lOnMouseOut = "document.getElementById('" + getId() + "').className='" + getClassInit() + "';document.getElementById('" + getId()
				+ "').style.zIndex=" + getZIndex() + ";" + getOnMouseOut();
		style = "";
		if (isPositionAbsolute()) {
			style = "position:absolute; ";
		}
		style += "left:" + getLeft() + "; top:" + getTop() + "; width:" + getWidth() + "; height:" + getHeight() + "; ";
		style += "z-index:" + getZIndex() + "; ";
		style += "background-color: " + getBgColor() + "; layer-background-color: " + getLayerBgColor() + "; ";
		style += "border: " + getBorder() + "; ";
		if (!VISIBILITY_DEFAULT.equals(getVisibility())) {
			style += "visibility: " + getVisibility() + ";";
		}
		super.appendToResponse(arg0, arg1);
	}

	public boolean synchronizesVariablesWithBindings() {
		return false;
	}

	public String getBgColor() {
		bgColor = (String) valueForBinding("bgColor");
		if (bgColor == null) {
			bgColor = "#000000";
		}
		return bgColor;
	}

	public void setBgColor(final String bgColor) {
		this.bgColor = bgColor;
	}

	public String getBorder() {
		border = (String) valueForBinding("border");
		if (border == null) {
			border = "border: 1px none #000000;";
		}
		return border;
	}

	public void setBorder(final String border) {
		this.border = border;
	}

	public String getClassInit() {
		classInit = (String) valueForBinding("classInit");
		return classInit;
	}

	public void setClassInit(final String classInit) {
		this.classInit = classInit;
	}

	public String getClassOver() {
		classOver = (String) valueForBinding("classOver");
		return classOver;
	}

	public void setClassOver(final String classOver) {
		this.classOver = classOver;
	}

	public String getContenuBalise() {
		contenuBalise = (String) valueForBinding("contenuBalise");
		if (contenuBalise == null) {
			contenuBalise = new String("toto");
		}
		return contenuBalise;
	}

	public void setContenuBalise(final String contenuBalise) {
		this.contenuBalise = contenuBalise;
	}

	public String getHeight() {
		height = (String) valueForBinding("height");
		return height;
	}

	public void setHeight(final String height) {
		this.height = height;
	}

	public String getId() {
		id = (String) valueForBinding("id");
		return id;
	}

	public void setId(final String id) {
		this.id = id;
	}

	public String getLayerBgColor() {
		layerBgColor = (String) session().objectForKey("layerBgColor");
		if (layerBgColor == null) {
			layerBgColor = getBgColor();
		}
		return layerBgColor;
	}

	public void setLayerBgColor(final String layerBgColor) {
		this.layerBgColor = layerBgColor;
	}

	public String getLeft() {
		left = (String) valueForBinding("left");
		return left;
	}

	public void setLeft(final String left) {
		this.left = left;
	}

	public String getOnMouseOut() {
		onMouseOut = (String) session().objectForKey("onMouseOut");
		if (onMouseOut == null) {
			onMouseOut = "";
		}
		return onMouseOut;
	}

	public void setOnMouseOut(final String onMouseOut) {
		this.onMouseOut = onMouseOut;
	}

	public String getOnMouseOver() {
		onMouseOver = (String) session().objectForKey("onMouseOver");
		if (onMouseOver == null) {
			onMouseOver = "";
		}
		return onMouseOver;
	}

	public void setOnMouseOver(final String onMouseOver) {
		this.onMouseOver = onMouseOver;
	}

	public boolean isPositionAbsolute() {
		if (valueForBinding("positionAbsolute") != null) {
			positionAbsolute = ((Boolean) valueForBinding("positionAbsolute")).booleanValue();
		}
		else {
			positionAbsolute = true;
		}
		return positionAbsolute;
	}

	public void setPositionAbsolute(final boolean positionAbsolute) {
		this.positionAbsolute = positionAbsolute;
	}

	public String getTop() {
		top = (String) valueForBinding("top");
		return top;
	}

	public void setTop(final String top) {
		this.top = top;
	}

	public String getVisibility() {
		visibility = (String) valueForBinding("visibility");
		if (visibility == null) {
			visibility = VISIBILITY_DEFAULT;
		}
		return visibility;
	}

	public void setVisibility(final String visibility) {
		this.visibility = visibility;
	}

	public String getWidth() {
		width = (String) valueForBinding("width");
		return width;
	}

	public void setWidth(final String width) {
		this.width = width;
	}

	public int getZIndex() {
		if (valueForBinding("zIndex") == null) {
			zIndex = 1;
		}
		else {
			zIndex = Integer.parseInt((String) valueForBinding("zIndex"));
		}
		return zIndex;
	}

	public void setZIndex(final int index) {
		zIndex = index;
	}

	public int getZIndexOver() {
		if (valueForBinding("zIndex") == null) {
			zIndexOver = getZIndex() + 1;
		}
		else {
			zIndexOver = Integer.parseInt((String) valueForBinding("zIndexOver"));
		}
		return zIndexOver;
	}

	public void setZIndexOver(final int indexOver) {
		zIndexOver = indexOver;
	}
}